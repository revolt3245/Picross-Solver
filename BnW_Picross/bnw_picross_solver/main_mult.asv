clear; clc; close;

param = Parameter.get_parameter(file="samples/nonogram_galaxy/2/" + 1 + ".txt", ...
    save_video=false);
%% video setting
if param.save_video
    FPS = 60;

    video_folder = "Video/";
    if ~isfolder(video_folder)
        mkdir(video_folder);
    end

    filename = "Picross";

    t = datetime;
    t_string = sprintf("_%d%02d%02d_%02d%02d%02d", t.Year, t.Month, t.Day, t.Hour, t.Minute, int32(t.Second));

    video = VideoWriter(video_folder + filename + t_string + ".mp4", "MPEG-4");
    video.FrameRate = FPS;
    video.Quality = 100;

    video.open;

    %{
    frame = getframe(gcf);
    writeVideo(graphics.video, frame);
    %}
end

%% initialize
fig = figure(Name="picross");
ax = gca;

for i=1:12
    cla(ax);
    param = Parameter.get_parameter(file="samples/nonogram_galaxy/3/" + i + ".txt", ...
        save_video=false);
    state = State.get_initial_state(param);
    graphics = Draw.initialize(fig, ax, 0.5, param);
if param.save_video
    FPS = 60;

    video_folder = "Video/";
    if ~isfolder(video_folder)
        mkdir(video_folder);
    end

    filename = "Picross";

    t = datetime;
    t_string = sprintf("_%d%02d%02d_%02d%02d%02d", t.Year, t.Month, t.Day, t.Hour, t.Minute, int32(t.Second));

    video = VideoWriter(video_folder + filename + t_string + ".mp4", "MPEG-4");
    video.FrameRate = FPS;
    video.Quality = 100;

    video.open;

    %{
    frame = getframe(gcf);
    writeVideo(graphics.video, frame);
    %}
end

    %% solving
    state.tick = tic;
    [state, flag] = Solver.branch_solver(param, state, graphics);

    if flag && ~Util.check_all_complete(param, state)
        [state, flag] = Solver.backtrack_solver(param, state, graphics);
    end
end

if ~flag
    disp("This puzzle is not solvable puzzle");
end

if param.save_video
    graphics.video.close;
end